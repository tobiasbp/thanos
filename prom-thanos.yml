apiVersion: v1
kind: Service
metadata:
  name: thanos-store-gateway
  namespace: monitoring
spec:
  # Headless service. Not loadbalancing
  clusterIP: None
  ports:
  - port: 10901
    targetPort: 10901
  selector:
    thanos-store-api: "true"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus-set
  namespace: monitoring
  #labels:
  #  app: prometheus-app
spec:
  replicas: 2
  serviceName: prometheus-service
  selector:
    matchLabels:
      app: prometheus-app
  template:
    metadata:
      labels:
        app: prometheus-app
        # Thanos Querier will find us by looking for this
        thanos-store-api: "true"
    spec:
      securityContext:
          runAsUser: 65534
          fsGroup: 65534
      volumes:
        # Prometheus config written here by Thonos
        - name: prometheus-shared
          emptyDir: {}
        #  Prometheus config here. Looked at by Thonos
        - name: config-volume
          configMap:
            name: prom-config
        # Prometheus rules stored here
        - name: rules-volume
          configMap:
            name: prom-rules
        # Secret Thanos config with credentials mounted here
        - name: thanos-config
          secret:
            secretName: thanos-config
      containers:
        - name: prometheus
          image: prom/prometheus:v2.17.2
          args:
            # Use config file generated by Thanos
            - "--config.file=/etc/prometheus-shared/prometheus.yml"
            # Store data here
            - "--storage.tsdb.path=/data/prometheus"
            # Allows Thanos to get meta data
            - "--web.enable-admin-api"
            # Allows Thanos to reload config on change
            - "--web.enable-lifecycle"
            # Disable compaction on Prometheus (We want Thanos to do it)
            - "--storage.tsdb.min-block-duration=2h"
            - "--storage.tsdb.max-block-duration=2h"
          ports:
            - name: prometheus
              containerPort: 9090
          volumeMounts:
            # Read Thanos generated config here
            - name: prometheus-shared
              mountPath: /etc/prometheus-shared
            # Store data here
            - name: prometheus-data
              mountPath: /data/prometheus
            # Read rules here
            - name: rules-volume
              mountPath: /etc/prometheus/rules
          env:
            #- name: LDAP_BIND_DN
            #  valueFrom:
            #    secretKeyRef:
            #      name: gf-secret
            #      key: ldap_bind_dn
            #- name: GF_DATABASE_SSL_MODE
            #  value: 'false'
        - name: thanos
          image: thanosio/thanos:v0.12.2
          args:
            - "sidecar"
            # Read the Prometheus data from here
            - "--tsdb.path=/data/prometheus"
            # Contact Prometheus here
            - "--prometheus.url=http://localhost:9090"
            # Look for updates to this file
            - "--reloader.config-file=/etc/prometheus/prometheus.yml.tmpl"
            # Build this config file for Prometheus to consume
            - "--reloader.config-envsubst-file=/etc/prometheus-shared/prometheus.yml"
            # Look for updates to rules here
            - "--reloader.rule-dir=/etc/prometheus/rules/"
            # Config for object storage
            - "--objstore.config-file=/etc/thanos/remote_storage.yml"
          ports:
            - name: http-sidecar
              containerPort: 10902
            - name: grpc
              containerPort: 10901
          livenessProbe:
            httpGet:
              port: 10902
              path: /-/healthy
          readinessProbe:
            httpGet:
              port: 10902
              path: /-/ready
          volumeMounts:
            # Write config here, so Prometheus can read it
            - name: prometheus-shared
              mountPath: /etc/prometheus-shared
            # Read Prometheus data here (Should be read only?)
            - name: prometheus-data
              mountPath: /data/prometheus
            # Read Prometheus config file here
            - name: config-volume
              mountPath: /etc/prometheus
            # Look for updates to Prometheus rules here
            - name: rules-volume
              mountPath: /etc/prometheus/rules
            # Thanos config files (Object storage)
            - name: thanos-config
              mountPath: /etc/thanos
          env:
            # Unique name to use in prom config generated by Thonos
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
  # Each replica will claim own persistent storage
  volumeClaimTemplates:
  - metadata:
      name: prometheus-data
      namespace: monitoring
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
      # Specific for Digital Ocean
      storageClassName: do-block-storage
